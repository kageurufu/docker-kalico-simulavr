name: Release

on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

jobs:
  build:
    name: Build and deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get Klipper and Moonraker metadata
        id: repo
        run: |
          KLIPPER_SHA=$(git ls-remote https://github.com/klipper3d/klipper master | awk '{print $1}')
          MOONRAKER_SHA=$(git ls-remote https://github.com/Arksine/moonraker master | awk '{print $1}')
          IMAGE_SHA=$(echo $KLIPPER_SHA-$MOONRAKER_SHA | sha1sum | awk '{print $1}')

          echo ::set-output name=klipper_sha::${KLIPPER_SHA}
          echo ::set-output name=moonraker_sha::${MOONRAKER_SHA}
          echo ::set-output name=image_sha::${IMAGE_SHA}

      - name: Check if Docker image already exists
        id: check
        run: |
          BUILD_IMAGE=false

          docker manifest inspect ghcr.io/${{ github.repository }}:sha-${{ steps.repo.outputs.image_sha }} > /dev/null || BUILD_IMAGE=true

          echo ::set-output name=build_image::${BUILD_IMAGE}

      - name: Prepare GitHub metadata
        if: ${{ steps.check.outputs.build_image == 'true' }}
        id: github_meta
        run: |
          REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}
          echo ::set-output name=repository_name::${REPOSITORY_NAME}

      - name: Prepare Docker image metadata
        if: ${{ steps.check.outputs.build_image == 'true' }}
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.github_meta.outputs.repository_name }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=klipper-sha-${{ steps.repo.outputs.klipper_sha }}
            type=raw,value=moonraker-sha-${{ steps.repo.outputs.moonraker_sha }}
            type=raw,value=sha-${{ steps.repo.outputs.image_sha }}
            type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}

      - name: Set up QEMU
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Log in to the Container registry
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        if: ${{ steps.check.outputs.build_image == 'true' }}
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          build-args: |
            KLIPPER_SHA=${{ steps.repo.outputs.klipper_sha }}
            MOONRAKER_SHA=${{ steps.repo.outputs.moonraker_sha }}
          push: true
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
