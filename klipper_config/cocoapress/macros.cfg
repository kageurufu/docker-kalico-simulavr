#####################################################################
# Macros
# Kim C. @ Cocoa Press, 2024
# Kylesiah, 2024
#####################################################################

# Test Value Reporting
# accel: 550mm/s^2 velocity: 9000mm/min seems stable with extruder but mostly empty core.
# accel: ???/s^2 velocity: mm/min no extruder but wiring loom.
# accel: ???/s^2 velocity: mm/min new core and extruder.

# Purges a small amount and disables the stepper so as not to heat up the motor more than needed.
[gcode_macro DEV_LITTLE_PURGE]
gcode:
    M83
    G1 E0.5 F12
    SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0

[gcode_macro PURGE]
gcode:
    M83
    G1 E1 F120

################################
# Start-of-Print Heater Checks #
################################ 
[gcode_macro HOME_AND_BED_MESH_CALIBRATE]
gcode:
    G28
    BED_MESH_CALIBRATE
    SAVE_CONFIG RESTART=0

[gcode_macro CHECK_HEATERS_CONNECTED]
gcode:
    # Check that all heaters connected are not below thermistor safety thresholds for disconnects.  
    # We *only* invoke this at the start of a print in current form such that we can allow full 
    # extruder swaps mid-print as well.
    
    {% for heater_sensor in printer.heaters.available_heaters %} # We only check valid heater outputs as-is since there's no elegant way to access the temperature sensors.
      {% if heater_sensor in printer %}
        {% if printer[heater_sensor].temperature < -10 %}
          RESPOND PREFIX="WARN:" MSG="Thermistor for {heater_sensor} disconnected.  This is not a good sign."
          CANCEL_PRINT
        {% endif %}
      {% endif %}
    {% endfor %}


[gcode_macro CHECK_HEATERS_CONNECTED]
gcode:
    # Check that all heaters connected are not below thermistor safety thresholds for disconnects.  
    # We *only* invoke this at the start of a print in current form such that we can allow full 
    # extruder swaps mid-print as well.
    
    {% for heater_sensor in printer.heaters.available_heaters %} # We only check valid heater outputs as-is since there's no elegant way to access the temperature sensors.
      {% if heater_sensor in printer %}
        {% if printer[heater_sensor].temperature < -10 %}
          RESPOND PREFIX="WARN:" MSG="Thermistor for {heater_sensor} disconnected.  This is not a good sign."
          CANCEL_PRINT
        {% endif %}
      {% endif %}
    {% endfor %}


[gcode_macro CHECK_HEATERS_HAVE_TARGET]
gcode:
  {% if printer.extruder.target == 0 %}
       RESPOND MSG="No heater target temperature configured, print would stall and fail.  Aborting."
       CANCEL_PRINT
  {% endif %}

  {% if printer['heater_generic Body_Heater'].target == 0 %}
      RESPOND MSG="No heater target temperature configured, print would stall and fail.  Aborting."
      CANCEL_PRINT
  {% endif %}

   
[gcode_macro CHECK_HEATSOAK]
gcode:
    {% if printer["gcode_macro __PARAMETERS"].delay_timer_remaining > 0 %}
        RESPOND MSG="Not yet done preheating, cannot start print yet.  Would stall and fail.  Aborting."
        CANCEL_PRINT
    {% endif %}

#######################
# Bed Meshing Macros  #
#######################

[gcode_macro _PROBE_NEW_MESH]
gcode:
    BED_MESH_CALIBRATE METHOD=automatic ADAPTIVE_MARGIN=5
    SAVE_CONFIG RESTART=0

[gcode_macro PROBE_AND_PRINT]
gcode:
  {% if 'default' not in printer.bed_mesh.profiles %}
    _PROBE_NEW_MESH
 {% endif %}
 
 {% if 'default' in printer.bed_mesh.profiles %} #mesh exists.
   BED_MESH_PROFILE LOAD=default
 {% endif %}

# Extruder Macros
# TODO: set up check for Z axis and move down
[gcode_macro MOVE_FROM_TOP_TO_BOTTOM]
gcode:
  # {% if printer.toolhead.position.z < 30 %}
  #   # Home and move z down	
  #   #
  #   RESPOND PREFIX="WARN:" MSG="Z position is: {printer.toolhead.position.z}"
  #   G28 Z
  #   G91
  #   G1 Z+25 F1500
  #   G90
  # {% endif %}
  M83
  G1 E+193 F1200
   
# Extruder Macros
[gcode_macro MOVE_FROM_BOTTOM_TO_TOP]
gcode:
  M83
  G1 E-193 F1200

[gcode_macro MOVE_EXTRUDER_UP]
gcode:
  M83
  G1 E-20 F1200

[gcode_macro MOVE_EXTRUDER_DOWN]
gcode:
  M83
  G1 E+20 F1200

# Cocoa Press Preheat Nozzle/Body shorthand helper.


###################################################
# Temperature Pre-heats Independent of UI Tooling #
###################################################
# Generic Preheat Macro

[gcode_macro _PREHEAT_TEMP]
gcode:
    {% set NOZZLE = params.NOZZLE_TEMP|default(30)|float %}
    {% set BODY = params.BODY_TEMP| default(29.9)|float %}
    {% set TIMER_EXPIRY = params.TIME_LENGTH|default(20)|float %} # 20 minutes.

    SET_HEATER_TEMPERATURE HEATER=Body_Heater TARGET={BODY}
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={NOZZLE}
    HEATSOAK_TIMER TIMER_TOTAL={TIMER_EXPIRY}
    

# Calls the above with tentative temperatures from inline the config.  
# May need to be modified down the line to permit from-file / from-USB
# temperature saving.

# og dark was 33.1 / 33.0
# og milk was 34.0 / 33.9 
# og white was 31.4 / 31.3

[gcode_macro DISABLE_EXTRUDER_STEPPER]
gcode:
  {% if 'extruder' in printer.stepper_enable['steppers'] %}
    {% if printer.stepper_enable['steppers']['extruder'] %}
      RESPOND TYPE='echo'  MSG="Disabling E Stepper, was enabled prior."
      SET_STEPPER_ENABLE STEPPER=extruder ENABLE=0
    {% else %}
        RESPOND TYPE='echo' MSG="E stepper was disabled, ignoring command to disable."
    {% endif %}
    
  {% endif %}
  #SET_STEPPER_ENABLE
[gcode_macro PREHEAT_DARK]
gcode:
  _PREHEAT_TEMP NOZZLE_TEMP=32.9 BODY_TEMP=32.8 # Tested on 1.5 with removable extruder, room temp was/is 

[gcode_macro PREHEAT_MILK]
gcode:
  _PREHEAT_TEMP NOZZLE_TEMP=33.6 BODY_TEMP=33.5

[gcode_macro PREHEAT_WHITE]
gcode:
  _PREHEAT_TEMP NOZZLE_TEMP=31.9 BODY_TEMP=31.8 #lowered from 32.3/32.4, needs to be preheat for the full 15 first. Yipee.


############################## 
#     Legacy Line Purges     #
##############################
[gcode_macro _PURGE_LINE_SMALL_NOZZLE]
gcode: 
  G92 E0;
  M83;
  
  ; Purge Line 1
  G1 X131.75 Y148 Z3.2 F1200
  G1 X128.625 Y148 Z.5 E.15 F800
  G1 X8.25 Y148 E.25 F900
  
  ; Purge Line 2
  G1 X8.25 Y145 F900
  G1 X131.25 Y145 E.10538 F900
  G1 X131.75 Y145 F1000

  G21; 
  G90; absolute coords
  M83; absolute extrusion distances
  G92 E0; extruder reset pos to 0.


[gcode_macro _PURGE_LINE_LARGE_NOZZLE]
gcode: 
  G92 E0;
  M83;

  G1 X138 Y148
  G1 Z1 ; small z-hop to avoid potentially big purge getting caught.
  G1 E1.25 F450
  G1 X70 Y148 E.15 F1200 # 125%
  G1 X5 Y148 E.18 F1600 # 150%
  G1 X2 Y148 F1600 # 150%
  
  G21; 
  G90; absolute coords
  M83; absolute extrusion distances
  G92 E0; extruder reset pos to 0.


############################
#  Global Macro Variables  #
############################

# variables in a gcode_macro MUST be prepended with variable_ to not error for some reason.  Ugh.
[gcode_macro __PARAMETERS]
variable_delay_timer_remaining: 0
variable_delay_timer_total: 0
variable_print_when_preheat_expires: False
variable_finished_heatsoak: False
variable_cocoa_core_loaded: False # Not yet used.
variable_print_nozzle_diameter: 0.8 # Used to confirm the nozzle diameter for the purge routine smarts.  Not yet used properly.
gcode:

[gcode_macro CANCEL_HEATSOAK]
gcode:
  UPDATE_DELAYED_GCODE ID=_PREHEAT_SOAK_TIMER DURATION=0
  #{% set printer["gcode_macro __PARAMETERS"].finished_heatsoak = False %} # reset the state if we cancel the heatsoak.
  SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=finished_heatsoak VALUE=False
  
[gcode_macro HEATSOAK_TIMER]
gcode:
  {% set timer_total = params.TIMER_TOTAL|default(20)|int %}
  {% set timer_remain = params.TIMER_TOTAL|default(20)|int %}
  SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=delay_timer_remaining VALUE={timer_remain*60}
  SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=delay_timer_total VALUE={timer_total*60}

  #RESPOND TYPE=command MSG='{ printer['gcode_macro __PARAMETERS'] }'  
    SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=finished_heatsoak VALUE=False
  UPDATE_DELAYED_GCODE ID=_PREHEAT_SOAK_TIMER DURATION=1
  
### TEST DELAYED GCODE THING
[delayed_gcode _PREHEAT_SOAK_TIMER]
gcode:
    {% if (printer["gcode_macro __PARAMETERS"].delay_timer_remaining > 0) %}
        RESPOND TYPE=command MSG="action:preheat_notify FULL_MINUTES_REMAINING={ printer["gcode_macro __PARAMETERS"].delay_timer_remaining // 60 } MINUTES_TOTAL={ printer["gcode_macro __PARAMETERS"].delay_timer_total // 60 } TOTAL_SECONDS_REMAINING={ printer["gcode_macro __PARAMETERS"].delay_timer_remaining }"
        # Development only M117 below.
        # M117 Timer continues.  Time remaining is { printer["gcode_macro __PARAMETERS"].delay_timer_remaining }
        SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=delay_timer_remaining VALUE={ printer["gcode_macro __PARAMETERS"].delay_timer_remaining - 1}
        UPDATE_DELAYED_GCODE ID=_PREHEAT_SOAK_TIMER DURATION=1
    {% else %}
        # Development only M117 below.
        #M117 Soak stopped/expired/cancelled.
        SET_GCODE_VARIABLE MACRO=__PARAMETERS VARIABLE=finished_heatsoak VALUE=True
        {% if printer["gcode_macro __PARAMETERS"].print_when_preheat_expires %}
          M117 START_PRINT_INVOKED
        {% endif %}
        UPDATE_DELAYED_GCODE ID=_PREHEAT_SOAK_TIMER DURATION=0
    {% endif %}


# TODO Test and find safe thresholds.  Needs more work for SURE.
[gcode_macro _MOVE_TOP]
gcode:
    ENABLE_STALLGUARD STEPPER=extruder ENABLE=1
    M83
    G1 E-2.5 F150
    UPDATE_DELAYED_GCODE ID=JOGGER_HELPER_1 DURATION=1

############################
# Post-Layer Sanity Checks #
############################

# TODO: Add check for whether or not the current layer passes the threshold to turn on stallguard runout for sanity.
# TODO: Add check for whether or not the layer took longer than the layer threshold timer.

##########################
# Tooling and Infra Checks
##########################

[gcode_macro CHECK_PRINTER_FIRMWARE_VERSION]
gcode:
  {% set current_firmware_version = "0.0.0" %}
  {% if current_firmware_version != params.CURRENT %}
      RESPOND TYPE=command MSG="action:prompt_begin Firmware Variant Check"
      RESPOND TYPE=command MSG="action:prompt_text Your Cocoa Press' version doesn't match the latest of the slicer profile youre using.  You may want to update by following the steps at https://help.cocoapress.com/v1.5/update."
      RESPOND TYPE=command MSG="action:prompt_button_group_start"
      RESPOND TYPE=command MSG="action:prompt_footer_button Print Anyways|RESPOND TYPE=command MSG=action:prompt_end"
      RESPOND TYPE=command MSG="action:prompt_footer_button Abort Print|CANCEL_PRINT|error"
      RESPOND TYPE=command MSG="action:prompt_button_group_end"
      RESPOND TYPE=command MSG="action:prompt_show"
  {% endif %}


  
