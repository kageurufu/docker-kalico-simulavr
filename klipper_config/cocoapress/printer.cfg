[include thermistors/therm.cfg]
[include macros.cfg]
[include cocoa_mainsail_macros.cfg]

## Cocoa Press 1.5 R&D Confiuration
# Hardware:
# BTT SKR Pico V1.0 (https://github.com/bigtreetech/SKR-Pico/)
# BTT Pi 1.2 (https://github.com/bigtreetech/BTT-Pi)
# BTT HDMI5 Screen V1.2 (https://biqu.equipment/products/bigtreetech-hdmi5-v1-0-hdmi7-v1-0)
# above runs a fork of KlipperScreen (https://github.com/CocoaPress/KlipperScreen-CocoaPress)

[gcode_macro START_PRINT]
gcode:  
  G21; Affirm that units are set in millimeters.
  G92 E0; Reset / state extruder position is 0.
  G90; absolute coordinate move for all axes.
  M82; absolute extrusion distances fir 
  
  M117 Homing.
  #M117 # clear any messages lingering on screen.
  G28
  
  #CHECK_PRINTER_FIRMWARE_VERSION CURRENT=0.0.0 #Disabled during development?

  ENABLE_STALLGUARD STEPPER=extruder ENABLE=0 # do not try during test runs as-is.
  
  # ensure that any heater connected is in the positive celcius.  Some swing allowed for canadian garages. 
  CHECK_HEATERS_CONNECTED
  # CHECK_HEATSOAK
  {% if 'default' in printer.bed_mesh.profiles %}
    BED_MESH_PROFILE LOAD="default"
  {% endif %}
  SAVE_CONFIG RESTART=0
  #M117 Fast bed meshing.
  
  M117 Purging and priming for print.

  # Setup for KS' layer counter.  Hopefully an improvement.
  SET_PRINT_STATS_INFO CURRENT_LAYER=0

  _PURGE_LINE_SMALL_NOZZLE

  M117 # Clear screen.

[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_cocoapress-if00
restart_method: command

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 1500
max_z_velocity: 8
max_z_accel: 300
square_corner_velocity: 0.8 # Changed from 5.0 default and working but skrunkly 2.0, may need to be reverted.

# Special Config Options for DangerKlipper
[danger_options]
log_statistics: False
allow_plugin_override: True
#multi_mcu_trsync_timeout: 0.05
temp_ignore_limits: True

[telemetry]
enabled: True

[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT
with_subdirs: true

[idle_timeout]
timeout: 0 # zero is disabled, DK option.

[gcode_arcs]
resolution: .04

[save_variables]
filename:  cocoa_press_settings.cfg

# Needed for KlipperScreen's "Prompt" module.
[respond]

# This section allows us to cancel an object from a print in the event a single one failed.  Not perfect but it's present.
[exclude_object]

# Added to override the missing one when we don't use mainsail.cfg
[display_status]

#############################
# BED PROBING AND MESHING   #
#############################
[probe]
pin: ^gpio22
x_offset: 0
y_offset: 64.4
# z_offset is found in printer.autosave.cfg
speed: 15
samples: 1
samples_result: average
sample_retract_dist: 1.5
samples_tolerance: 0.01
samples_tolerance_retries: 5

[bed_mesh]
speed: 50
horizontal_move_z: 2.5
mesh_min: 5,69.4
mesh_max: 135,194.4
probe_count: 4,4
fade_start: 3
fade_end: 20

[safe_z_home]
home_xy_position: 70, 70
speed: 50
z_hop: 5
z_hop_speed: 20
  
###################
# Temperature Sensors
###################

# Used to monitor host temperatures. Can be hidden down the line, otherwise may be used to control fan PWM if not always on.
[temperature_sensor BTT_Pi_1.2]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_fan Electronics_Fan]
sensor_type: temperature_host #This is what the Pi3's Temperature sensor is known as.
pin: gpio17                     #Set this to your fan pin
max_temp: 85.0                #Set below 85C, Pi3+ MCU can be damaged at 85C
target_temp: 45.0             #Set this to your preferred running temperature
min_temp: 0
shutdown_speed: 0.1
kick_start_time: 0.5
hardware_pwm: True
max_speed: 1.0
min_speed: 0.19
control: pid
pid_Kp: 2.0
pid_Ki: 5.0
pid_Kd: 0.5
pid_deriv_time: 2.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
dir_pin: !gpio10
enable_pin: !gpio12
microsteps: 64
rotation_distance: 40
endstop_pin: ^gpio4
position_endstop: 140
position_max: 140
homing_speed: 20

# [tmc2209 stepper_x]
# uart_pin: gpio9
# tx_pin: gpio8
# uart_address: 0
# run_current: 0.975
# sense_resistor: 0.110
# stealthchop_threshold: 0

[stepper_y]
step_pin: gpio6
dir_pin: !gpio5
enable_pin: !gpio7
microsteps: 64
rotation_distance: 40
endstop_pin: ^gpio3
position_endstop: 140
position_max: 140
homing_speed: 20

# [tmc2209 stepper_y]
# uart_pin: gpio9
# tx_pin: gpio8
# uart_address: 2
# run_current: 0.975
# sense_resistor: 0.110
# stealthchop_threshold: 0

#####################################################################
#   Z Stepper Settings
#####################################################################

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
rotation_distance: 8
microsteps: 64
endstop_pin:  probe:z_virtual_endstop
position_max: 150
position_min: -20
homing_speed: 10
second_homing_speed: 3.0
homing_retract_dist: 0
  
# [tmc2209 stepper_z]
# uart_pin: gpio9
# diag_pin: gpio25
# tx_pin: gpio8
# uart_address: 1
# interpolate: False
# run_current: 0.6
# sense_resistor: 0.110 #Do we actually want this?
# driver_SGTHRS: 32
# stealthchop_threshold: 0 #Disabled for positional accuracy.

#[input_shaper]
#shaper_freq_x: 85
#shaper_freq_y: 85
#shaper_type: mzv

#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: gpio14
dir_pin: !gpio13 #was "gpio13"
enable_pin: !gpio15
full_steps_per_rotation: 200
rotation_distance: 4  # Non-Captive Stepper Pitch
microsteps: 64
nozzle_diameter: 0.8
filament_diameter: 22.65 # nominal measurement of cocoa core in millimeters, dia.
heater_pin: gpio23
sensor_type: 103AP-2-A-BetaCurve #Beta curve yielded the most consistent results based on the values Ellie provided.
sensor_pin: gpio27
control: pid_v
pid_Kp: 69 # 68.453
pid_Ki: 1.978
pid_Kd: 425 #426.122
min_temp: 0
max_temp: 60
min_extrude_temp: 0
max_power: 0.6
max_extrude_only_velocity: 50.0
max_extrude_only_accel: 300
max_extrude_only_distance: 200
max_extrude_cross_section: 500 #set for KAMP, oop.

# [tmc2209 extruder]
# uart_pin: gpio9
# tx_pin: gpio8
# diag_pin: ^!gpio16
# uart_address: 3
# interpolate: False
# run_current: 0.975
# hold_current: 0.975
# stealthchop_threshold: 0
# sense_resistor: 0.110 # Needed due to board setup.
# driver_SGTHRS: 10 # 0 is least sensitive, 255 is most sensitive. 

# Run current if the only parameter seems to also adjust the run_current and hold_current for some reason.
# As such, we'll need to specify the hold current at being somewhat low as well, even if we *do* increase 
# the run current.  Otherwise the motor will *happily* scream at you for hours to hold position and 
# quickly heat up.

# run_current is the minimum we need to adjust for sensorless detection.
# hold_current is *not* a suggested setting, but it can be set to run_current when not in a print, and 
# set to ~.5A when we *are*. This also seems to be effected by the sense_resistor, which explains the 
# start of this headache.

#####################################################################
#   Body Heater
#####################################################################

[heater_generic Body_Heater]
gcode_id: BH
heater_pin: gpio21
max_power: .6
sensor_type: 103AP-2-A-BetaCurve
sensor_pin: gpio26
control: pid_v
pid_kp: 69 #68.453
pid_ki: 2.749
pid_kd: 450 #426.122
min_temp: 0
max_temp: 60

#####################################################################
# Verify_Heater Overrides for Partial Cores
#####################################################################

[verify_heater Body_Heater]
max_error: 5000 # Default of 120, used to be 550.  Seemed to have issues in cold rooms (65F office.)
hysteresis: 1 # Default of 5.  Max degress variance to be in "range".  May help with stability.
ignore_below: -20.0

[verify_heater extruder]
max_error: 5000 # Default of 120, used to be 550.  Seemed to have issues in cold rooms (65F office.).
hysteresis: 1 # Default of 5.  Max degress variance to be in "range".  May help with stability.
ignore_below: -20.0

############################
# TESTING: Filament Runout #
############################
[filament_switch_sensor Runout]
pause_on_runout: False # This is due to it invoking `PAUSE` even when not printing during loading / purging.
runout_gcode:
    RESPOND TYPE=command MSG="action:runout_notify"
    {% if printer.idle_timeout.state|upper in ["PRINTING", "BUSY"] %} # We only want to invoke pause on the printer actually *printing* if detected.
      PAUSE
      M117 "Detected filament runout."
    {% endif %}
  {% if printer.idle_timeout.state|upper == IDLE %}
  M117 detected ya girl
  {% endif %}
insert_gcode:
  RESPOND TYPE=command MSG="action:runout_loaded_notify"
  #M117 "Detected filament inserted."
event_delay: 1.0
pause_delay: 0.05
switch_pin: ^!gpio16
